{
    "Course Code": "9050523",
    "METU Credit (Theoretical-Laboratory hours/week)": "3(3-0)",
    "ECTS Credit": "8.0",
    "Department": "Software Management",
    "Language of Instruction": "English",
    "Level of Study": "Masters",
    "Course Coordinator": "Assoc.Prof.Dr. AYSU BET√ùN CAN",
    "Offered Semester": "Fall or Spring Semesters.",
    "Course Objectives": "<meta http-equiv=\"refresh\" content=\"0; URL=noscript.html\">METU | Course SyllabusCourse ObjectivesAt the end of this course, the student will:know design pattern terminology and GoF design patternsuse software design patterns in appropriate context and able to justify this usebe able to evaluate object oriented designrecognize design problems and propose solutions",
    "Course Learning Outcomes": "<meta http-equiv=\"refresh\" content=\"0; URL=noscript.html\">METU | Course SyllabusCourse Learning OutcomesAt the end of this course, the student will be able to:recall the names and classify GoF design patternsselect, justify and apply software design patterns in appropriate contextdescribe and compare design patterns in terms of their problem context, solution structure, consequencesrecognize design problems in object oriented softwareknow basic object oriented design principlesable to restructure the design/code to some extend",
    "Course Content": "This course focuses on design patterns, patterns for concurrent software systems, antipatterns and recognizing design problems, refactoring bad design to patterns. Hands-on experience on reuse of design patterns will be established by a class project. The course includes reviews of UML, object-oriented design and aspect oriented design. Students will be able to efficiently communicate program structures using patterns and to develop software of high quality."
}